<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeafletJS on CamMakoJ</title>
    <link>/tags/leafletjs/</link>
    <description>Recent content in LeafletJS on CamMakoJ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Apr 2018 11:03:51 -0600</lastBuildDate>
    
	<atom:link href="/tags/leafletjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeafletJS Maps</title>
      <link>/blog/2018/april/leafletmaps/</link>
      <pubDate>Wed, 04 Apr 2018 11:03:51 -0600</pubDate>
      
      <guid>/blog/2018/april/leafletmaps/</guid>
      <description>LeafletJS Leaflet JS is a javascript library for the creation of web maps. I wanted to use it to create a simple web-map for viewing the Alberta Merged Wetland Inventory (AMWI) streamed via a web map service (WMS). Eventually I would like to be able to upload a shapefile to zoom to an area and determine if an area does intersect any mapped wetlands. To access the WMS for the AMWI I used the links available in Alberta&amp;rsquo;s open data portal.</description>
    </item>
    
    <item>
      <title>Environmental Map</title>
      <link>/docs/environmental-map/</link>
      <pubDate>Wed, 04 Apr 2018 09:34:47 -0600</pubDate>
      
      <guid>/docs/environmental-map/</guid>
      <description>L.TileLayer.BetterWMS = L.TileLayer.WMS.extend({onAdd: function (map) {L.TileLayer.WMS.prototype.onAdd.call(this, map);map.on(&#39;click&#39;, this.getFeatureInfo, this);},onRemove: function (map) {L.TileLayer.WMS.prototype.onRemove.call(this, map);map.off(&#39;click&#39;, this.getFeatureInfo, this);},getFeatureInfo: function (evt) {var url = this.getFeatureInfoUrl(evt.latlng),showResults = L.Util.bind(this.showGetFeatureInfo, this);$.ajax({url: url,success: function (data, status, xhr) {var err = typeof data === &#39;string&#39; ? null : data;showResults(err, evt.latlng, data);},error: function (xhr, status, error) {showResults(error);}});},getFeatureInfoUrl: function (latlng) {var point = this.</description>
    </item>
    
  </channel>
</rss>